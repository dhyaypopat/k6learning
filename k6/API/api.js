// Auto-generated by the postman-to-k6 converter

import "./libs/shim/core.js";
import "./libs/shim/urijs.js";
import "./libs/shim/expect.js";

export let options = { maxRedirects: 4 };

const Request = Symbol.for("request");
postman[Symbol.for("initial")]({
  options
});

export default function() {
  postman[Request]({
    name: "Get Request : All Users",
    id: "45809479-49f0-4e94-9ac8-9c2677c272dd",
    method: "GET",
    address: "{{url}}api/users?page=2"
  });

  postman[Request]({
    name: "Get Request : Single User With ID",
    id: "00f7df1b-505d-443e-b990-bb9c311c5f58",
    method: "GET",
    address: "{{url}}/api/users/{{value}}"
  });

  postman[Request]({
    name: "Post Request : Create Users",
    id: "1f484894-fede-4093-9df3-4cc8db2851b3",
    method: "POST",
    address: "https://reqres.in/api/users",
    data: '{\n    "name": "Dhyay",\n    "job": "QA"\n}'
  });

  postman[Request]({
    name: "PUT Request : User",
    id: "751d622a-7658-44b0-93e7-4715d00f6307",
    method: "PUT",
    address: "{{url}}api/users/2",
    data: '{\n    "name" : "dhyay",\n    "job" : "QA.JR"\n}'
  });

  postman[Request]({
    name: "Patch Request : User",
    id: "e9df6dd3-2ee0-4781-9dfe-3460f58c51bb",
    method: "PATCH",
    address: "{{url}}api/users/2",
    data: '{\n    "name" : "dhyay"\n}'
  });

  postman[Request]({
    name: "Header Information",
    id: "808152e8-822a-44e8-921f-e6109c79bc94",
    method: "HEAD",
    address: "{{url}}api/users?page=2"
  });

  postman[Request]({
    name: "Options",
    id: "b6b21d28-3a12-4bae-a6ae-784e544e8163",
    method: "POST",
    address: "{{url}}api/users",
    data: '{\n    "name": "Dhyay",\n    "job": "QA"\n}',
    headers: {
      randomnumber: "{{$randomInt}}"
    },
    post(response) {
      pm.test("JSON Schema Name Validations", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData.name).to.eql("Dhyay");
      });
      pm.test("JSON Schema Job Validations", function() {
        var jsonData = pm.response.json();
        pm.expect(jsonData.job).to.eql("QA");
      });

      var schema = {
        $schema: "https://json-schema.org/draft-07/schema",
        $id: "http://example.com/example.json",
        type: "object",
        default: {},
        required: ["name", "job", "id", "createdAt"],
        properties: {
          name: {
            type: "string",
            default: "",
            examples: ["Dhyay"]
          },
          job: {
            type: "string",
            default: "",
            examples: ["QA"]
          },
          id: {
            type: "string",
            default: "",
            examples: ["426"]
          },
          createdAt: {
            type: "string",
            default: "",
            examples: ["2022-06-22T06:00:51.203Z"]
          }
        },
        examples: [
          {
            name: "Dhyay",
            job: "QA",
            id: "426",
            createdAt: "2022-06-22T06:00:51.203Z"
          }
        ]
      };
      var data1 = pm.response.json();
      pm.test("Schema is Valid", function() {
        pm.expect(tv4.validate(data1, $schema)).to.be.true;
      });
    }
  });
}
